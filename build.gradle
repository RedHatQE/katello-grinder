apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'

allprojects {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    compileGroovy.groovyOptions.fork = false
    compileTestGroovy.groovyOptions.fork = false
}


eclipse {
    project {
        natures 'org.python.pydev.pythonNature'
        buildCommand 'org.python.pydev.PyDevBuilder'
    }
}

configurations {
    grinder
    compile.exclude module: 'scannotation'
    grinder.exclude module: 'scannotation'
}

repositories {
    mavenCentral()
    mavenLocal()
    [ 'https://repository.jboss.org/nexus/content/repositories/thirdparty-uploads', 'http://clojars.org/repo',
      'http://download.java.net/maven/2/', 'http://repository.codehaus.org', 'http://snapshots.repository.codehaus.org' ].each { repo ->
        maven {
            url repo
        }
    }
}

dependencies {
    ext.jythonExclude = {
        exclude group: 'org.python', module: 'jython'
    }
    ext.grinderDep = 'net.sf.grinder:grinder:3.10'
    ext.katelloApiDep = 'com.redhat.qe:katello-api:2.0.4-SNAPSHOT'

    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.5.2') {
        exclude group: 'org.codehouse.groovy', module: 'groovy'
    }
    
    compile(grinderDep, jythonExclude)
    grinder(grinderDep, jythonExclude)

    compile katelloApiDep
    grinder 'org.testng:testng:6.7',
            'org.python:jython-standalone:2.5.2',
            'jyson:jyson:1.0.2',
            katelloApiDep,
            'net.oauth.core:oauth:20100527',
            'com.google.inject:guice:3.0'
    groovy 'org.codehaus.groovy:groovy:1.8.8'
}

task exec(dependsOn: 'classes', type: JavaExec) {
    main = 'net.grinder.Grinder'
    classpath = configurations.grinder + sourceSets.main.runtimeClasspath
    systemProperties = System.properties
    systemProperties(['grinder.jvm.arguments': '-Djsse.enableSNIExtension=false -Dpython.home=/opt/jython/jython2.5.2'])
    args "${project.projectDir}/src/main/grinder/grinder.properties"
}

task console(type: JavaExec) {
    main = 'net.grinder.Console'
    systemProperties = System.properties
    classpath = configurations.grinder + sourceSets.main.runtimeClasspath
}

task proxy(type: JavaExec) {
    main = 'net.grinder.TCPProxy'
    classpath = configurations.grinder + sourceSets.main.runtimeClasspath
    args = [ "-http jython", "-console" ]
}

task jython(type: JavaExec) {
    standardInput = System.in
    main = 'org.python.util.jython'
    classpath = configurations.grinder + sourceSets.main.runtimeClasspath
}

task populate(type: JavaExec) {
    main = 'com.redhat.qe.perf.katello.InitialSystems'
    systemProperties = System.properties
    classpath = configurations.grinder + sourceSets.main.runtimeClasspath
}
